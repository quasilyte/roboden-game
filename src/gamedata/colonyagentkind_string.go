// Code generated by "stringer -type=ColonyAgentKind -trimprefix=Agent"; DO NOT EDIT.

package gamedata

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AgentWorker-0]
	_ = x[AgentMilitia-1]
	_ = x[AgentFreighter-2]
	_ = x[AgentRedminer-3]
	_ = x[AgentCrippler-4]
	_ = x[AgentFighter-5]
	_ = x[AgentScavenger-6]
	_ = x[AgentCourier-7]
	_ = x[AgentTrucker-8]
	_ = x[AgentPrism-9]
	_ = x[AgentServo-10]
	_ = x[AgentRepeller-11]
	_ = x[AgentRepair-12]
	_ = x[AgentCloner-13]
	_ = x[AgentRecharger-14]
	_ = x[AgentGenerator-15]
	_ = x[AgentMortar-16]
	_ = x[AgentAntiAir-17]
	_ = x[AgentRefresher-18]
	_ = x[AgentStormbringer-19]
	_ = x[AgentDestroyer-20]
	_ = x[AgentMarauder-21]
	_ = x[AgentKindNum-22]
	_ = x[AgentGunpoint-23]
}

const _ColonyAgentKind_name = "WorkerMilitiaFreighterRedminerCripplerFighterScavengerCourierTruckerPrismServoRepellerRepairClonerRechargerGeneratorMortarAntiAirRefresherStormbringerDestroyerMarauderKindNumGunpoint"

var _ColonyAgentKind_index = [...]uint8{0, 6, 13, 22, 30, 38, 45, 54, 61, 68, 73, 78, 86, 92, 98, 107, 116, 122, 129, 138, 150, 159, 167, 174, 182}

func (i ColonyAgentKind) String() string {
	if i >= ColonyAgentKind(len(_ColonyAgentKind_index)-1) {
		return "ColonyAgentKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ColonyAgentKind_name[_ColonyAgentKind_index[i]:_ColonyAgentKind_index[i+1]]
}
